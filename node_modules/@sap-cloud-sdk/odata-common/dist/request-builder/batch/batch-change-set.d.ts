import { DefaultDeSerializers, DeSerializers } from '../../de-serializers';
import { EntityBase } from '../../entity-base';
import { CreateRequestBuilderBase } from '../create-request-builder-base';
import { DeleteRequestBuilderBase } from '../delete-request-builder-base';
import { UpdateRequestBuilderBase } from '../update-request-builder-base';
/**
 * Representation of a batch change set, which holds a collection of write operations.
 */
export declare class BatchChangeSet<DeSerializersT extends DeSerializers = DefaultDeSerializers> {
    readonly requests: (CreateRequestBuilderBase<EntityBase, DeSerializersT> | UpdateRequestBuilderBase<EntityBase, DeSerializersT> | DeleteRequestBuilderBase<EntityBase, DeSerializersT>)[];
    readonly boundary: string;
    /**
     * Create an instance of BatchChangeSet.
     * @param requests - Requests to combine to one change set.
     * @param boundary - Request boundary for separation of sub requests. Defaults to an auto generated value.
     */
    constructor(requests: (CreateRequestBuilderBase<EntityBase, DeSerializersT> | UpdateRequestBuilderBase<EntityBase, DeSerializersT> | DeleteRequestBuilderBase<EntityBase, DeSerializersT>)[], boundary?: string);
}
//# sourceMappingURL=batch-change-set.d.ts.map