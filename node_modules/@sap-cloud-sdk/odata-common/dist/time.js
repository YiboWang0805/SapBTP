"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.secondsToTime = exports.timeToSeconds = exports.durationRegexV4 = exports.durationRegexV2 = void 0;
/**
 * @internal
 */
exports.durationRegexV2 = /PT(?<hours>\d{1,2}H)?(?<minutes>\d{1,2}M)?(?<seconds>\d{1,2}S)?/;
/**
 * @internal
 */
exports.durationRegexV4 = /([+-]{1,1})?P(\d{1,2}D)?(T(\d{1,2}H)?(\d{1,2}M)?(\d{1,2}S)?(\d{2,2}\.\d+S)?)?/;
/**
 * Converts the given time to seconds in positive numerical format.
 * @param time - Time to convert.
 * @returns number Time in seconds.
 * @internal
 */
function timeToSeconds(time) {
    if (time) {
        return Math.floor(time.seconds + time.minutes * 60 + time.hours * 3600);
    }
    throw Error('The given time is not valid.');
}
exports.timeToSeconds = timeToSeconds;
/**
 * Converts from seconds to time as [[Time]].
 * @param n - Number of seconds to convert (should be positive).
 * @returns Time The converted time from the given number of seconds
 * @internal
 */
function secondsToTime(n) {
    if (n <= 0) {
        return { hours: 0, minutes: 0, seconds: 0 };
    }
    const hours = Math.floor(n / 3600);
    const restFromHours = n % 3600;
    const minutes = Math.floor(restFromHours / 60);
    const seconds = restFromHours % 60;
    return { hours, minutes, seconds };
}
exports.secondsToTime = secondsToTime;
//# sourceMappingURL=time.js.map