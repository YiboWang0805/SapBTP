
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 3.69.0
 */

package com.mycompany.vdm.namespaces.portalapplicationscf;

import java.util.List;
import java.util.Map;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.collect.Lists;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.mycompany.vdm.namespaces.portalapplicationscf.field.APIResourceField;
import com.mycompany.vdm.namespaces.portalapplicationscf.link.APIResourceLink;
import com.mycompany.vdm.namespaces.portalapplicationscf.link.APIResourceOneToOneLink;
import com.mycompany.vdm.namespaces.portalapplicationscf.selectable.APIResourceSelectable;
import com.sap.cloud.sdk.cloudplatform.connectivity.HttpClientAccessor;
import com.sap.cloud.sdk.cloudplatform.connectivity.HttpDestinationProperties;
import com.sap.cloud.sdk.datamodel.odata.helper.ODataTypeValueSerializer;
import com.sap.cloud.sdk.datamodel.odata.helper.VdmEntity;
import com.sap.cloud.sdk.odatav2.connectivity.ODataException;
import com.sap.cloud.sdk.odatav2.connectivity.ODataExceptionType;
import com.sap.cloud.sdk.odatav2.connectivity.ODataQuery;
import com.sap.cloud.sdk.odatav2.connectivity.ODataQueryBuilder;
import com.sap.cloud.sdk.odatav2.connectivity.ODataQueryResult;
import com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataField;
import com.sap.cloud.sdk.s4hana.datamodel.odata.annotation.Key;
import com.sap.cloud.sdk.typeconverter.TypeConverter;
import io.vavr.control.Option;
import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import org.apache.http.client.HttpClient;
import org.apache.olingo.odata2.api.edm.EdmSimpleTypeKind;


/**
 * <p>Original entity name from the Odata EDM: <b>APIResource</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataVdmEntityAdapterFactory.class)
public class APIResource
    extends VdmEntity<APIResource>
{

    /**
     * Selector for all available fields of APIResource.
     * 
     */
    public final static APIResourceSelectable ALL_FIELDS = () -> "*";
    /**
     * Constraints: Nullable, Maximum length: 36 <p>Original property name from the Odata EDM: <b>FK_PROXYENDPOINT_ID</b></p>
     * 
     * @return
     *     The fK_PROXYENDPOINT_ID contained in this entity.
     */
    @SerializedName("FK_PROXYENDPOINT_ID")
    @JsonProperty("FK_PROXYENDPOINT_ID")
    @Nullable
    @ODataField(odataName = "FK_PROXYENDPOINT_ID")
    private String fK_PROXYENDPOINT_ID;
    /**
     * Use with available fluent helpers to apply the <b>FK_PROXYENDPOINT_ID</b> field to query operations.
     * 
     */
    public final static APIResourceField<String> FKPROXYENDPOINTID = new APIResourceField<String>("FK_PROXYENDPOINT_ID");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>canShowDelete</b></p>
     * 
     * @return
     *     The canShowDelete contained in this entity.
     */
    @SerializedName("canShowDelete")
    @JsonProperty("canShowDelete")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "canShowDelete")
    private Boolean canShowDelete;
    /**
     * Use with available fluent helpers to apply the <b>canShowDelete</b> field to query operations.
     * 
     */
    public final static APIResourceField<Boolean> CAN_SHOW_DELETE = new APIResourceField<Boolean>("canShowDelete");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>canShowGet</b></p>
     * 
     * @return
     *     The canShowGet contained in this entity.
     */
    @SerializedName("canShowGet")
    @JsonProperty("canShowGet")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "canShowGet")
    private Boolean canShowGet;
    /**
     * Use with available fluent helpers to apply the <b>canShowGet</b> field to query operations.
     * 
     */
    public final static APIResourceField<Boolean> CAN_SHOW_GET = new APIResourceField<Boolean>("canShowGet");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>canShowHead</b></p>
     * 
     * @return
     *     The canShowHead contained in this entity.
     */
    @SerializedName("canShowHead")
    @JsonProperty("canShowHead")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "canShowHead")
    private Boolean canShowHead;
    /**
     * Use with available fluent helpers to apply the <b>canShowHead</b> field to query operations.
     * 
     */
    public final static APIResourceField<Boolean> CAN_SHOW_HEAD = new APIResourceField<Boolean>("canShowHead");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>canShowOption</b></p>
     * 
     * @return
     *     The canShowOption contained in this entity.
     */
    @SerializedName("canShowOption")
    @JsonProperty("canShowOption")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "canShowOption")
    private Boolean canShowOption;
    /**
     * Use with available fluent helpers to apply the <b>canShowOption</b> field to query operations.
     * 
     */
    public final static APIResourceField<Boolean> CAN_SHOW_OPTION = new APIResourceField<Boolean>("canShowOption");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>canShowPatch</b></p>
     * 
     * @return
     *     The canShowPatch contained in this entity.
     */
    @SerializedName("canShowPatch")
    @JsonProperty("canShowPatch")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "canShowPatch")
    private Boolean canShowPatch;
    /**
     * Use with available fluent helpers to apply the <b>canShowPatch</b> field to query operations.
     * 
     */
    public final static APIResourceField<Boolean> CAN_SHOW_PATCH = new APIResourceField<Boolean>("canShowPatch");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>canShowPost</b></p>
     * 
     * @return
     *     The canShowPost contained in this entity.
     */
    @SerializedName("canShowPost")
    @JsonProperty("canShowPost")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "canShowPost")
    private Boolean canShowPost;
    /**
     * Use with available fluent helpers to apply the <b>canShowPost</b> field to query operations.
     * 
     */
    public final static APIResourceField<Boolean> CAN_SHOW_POST = new APIResourceField<Boolean>("canShowPost");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>canShowPut</b></p>
     * 
     * @return
     *     The canShowPut contained in this entity.
     */
    @SerializedName("canShowPut")
    @JsonProperty("canShowPut")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "canShowPut")
    private Boolean canShowPut;
    /**
     * Use with available fluent helpers to apply the <b>canShowPut</b> field to query operations.
     * 
     */
    public final static APIResourceField<Boolean> CAN_SHOW_PUT = new APIResourceField<Boolean>("canShowPut");
    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 36 <p>Original property name from the Odata EDM: <b>id</b></p>
     * 
     * @return
     *     The id contained in this entity.
     */
    @Key
    @SerializedName("id")
    @JsonProperty("id")
    @Nullable
    @ODataField(odataName = "id")
    private String id;
    /**
     * Use with available fluent helpers to apply the <b>id</b> field to query operations.
     * 
     */
    public final static APIResourceField<String> ID = new APIResourceField<String>("id");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>isDeleteChecked</b></p>
     * 
     * @return
     *     The isDeleteChecked contained in this entity.
     */
    @SerializedName("isDeleteChecked")
    @JsonProperty("isDeleteChecked")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "isDeleteChecked")
    private Boolean isDeleteChecked;
    /**
     * Use with available fluent helpers to apply the <b>isDeleteChecked</b> field to query operations.
     * 
     */
    public final static APIResourceField<Boolean> IS_DELETE_CHECKED = new APIResourceField<Boolean>("isDeleteChecked");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>isGetChecked</b></p>
     * 
     * @return
     *     The isGetChecked contained in this entity.
     */
    @SerializedName("isGetChecked")
    @JsonProperty("isGetChecked")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "isGetChecked")
    private Boolean isGetChecked;
    /**
     * Use with available fluent helpers to apply the <b>isGetChecked</b> field to query operations.
     * 
     */
    public final static APIResourceField<Boolean> IS_GET_CHECKED = new APIResourceField<Boolean>("isGetChecked");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>isHeadChecked</b></p>
     * 
     * @return
     *     The isHeadChecked contained in this entity.
     */
    @SerializedName("isHeadChecked")
    @JsonProperty("isHeadChecked")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "isHeadChecked")
    private Boolean isHeadChecked;
    /**
     * Use with available fluent helpers to apply the <b>isHeadChecked</b> field to query operations.
     * 
     */
    public final static APIResourceField<Boolean> IS_HEAD_CHECKED = new APIResourceField<Boolean>("isHeadChecked");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>isOptionChecked</b></p>
     * 
     * @return
     *     The isOptionChecked contained in this entity.
     */
    @SerializedName("isOptionChecked")
    @JsonProperty("isOptionChecked")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "isOptionChecked")
    private Boolean isOptionChecked;
    /**
     * Use with available fluent helpers to apply the <b>isOptionChecked</b> field to query operations.
     * 
     */
    public final static APIResourceField<Boolean> IS_OPTION_CHECKED = new APIResourceField<Boolean>("isOptionChecked");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>isPatchChecked</b></p>
     * 
     * @return
     *     The isPatchChecked contained in this entity.
     */
    @SerializedName("isPatchChecked")
    @JsonProperty("isPatchChecked")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "isPatchChecked")
    private Boolean isPatchChecked;
    /**
     * Use with available fluent helpers to apply the <b>isPatchChecked</b> field to query operations.
     * 
     */
    public final static APIResourceField<Boolean> IS_PATCH_CHECKED = new APIResourceField<Boolean>("isPatchChecked");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>isPostChecked</b></p>
     * 
     * @return
     *     The isPostChecked contained in this entity.
     */
    @SerializedName("isPostChecked")
    @JsonProperty("isPostChecked")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "isPostChecked")
    private Boolean isPostChecked;
    /**
     * Use with available fluent helpers to apply the <b>isPostChecked</b> field to query operations.
     * 
     */
    public final static APIResourceField<Boolean> IS_POST_CHECKED = new APIResourceField<Boolean>("isPostChecked");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>isPutChecked</b></p>
     * 
     * @return
     *     The isPutChecked contained in this entity.
     */
    @SerializedName("isPutChecked")
    @JsonProperty("isPutChecked")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "isPutChecked")
    private Boolean isPutChecked;
    /**
     * Use with available fluent helpers to apply the <b>isPutChecked</b> field to query operations.
     * 
     */
    public final static APIResourceField<Boolean> IS_PUT_CHECKED = new APIResourceField<Boolean>("isPutChecked");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>life_cycle</b></p>
     * 
     * @return
     *     The life_cycle contained in this entity.
     */
    @SerializedName("life_cycle")
    @JsonProperty("life_cycle")
    @Nullable
    @ODataField(odataName = "life_cycle")
    private History life_cycle;
    /**
     * Constraints: Nullable, Maximum length: 1024 <p>Original property name from the Odata EDM: <b>name</b></p>
     * 
     * @return
     *     The name contained in this entity.
     */
    @SerializedName("name")
    @JsonProperty("name")
    @Nullable
    @ODataField(odataName = "name")
    private String name;
    /**
     * Use with available fluent helpers to apply the <b>name</b> field to query operations.
     * 
     */
    public final static APIResourceField<String> NAME = new APIResourceField<String>("name");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>proxyEndPointName</b></p>
     * 
     * @return
     *     The proxyEndPointName contained in this entity.
     */
    @SerializedName("proxyEndPointName")
    @JsonProperty("proxyEndPointName")
    @Nullable
    @ODataField(odataName = "proxyEndPointName")
    private String proxyEndPointName;
    /**
     * Use with available fluent helpers to apply the <b>proxyEndPointName</b> field to query operations.
     * 
     */
    public final static APIResourceField<String> PROXY_END_POINT_NAME = new APIResourceField<String>("proxyEndPointName");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>resource_path</b></p>
     * 
     * @return
     *     The resource_path contained in this entity.
     */
    @SerializedName("resource_path")
    @JsonProperty("resource_path")
    @Nullable
    @ODataField(odataName = "resource_path")
    private String resource_path;
    /**
     * Use with available fluent helpers to apply the <b>resource_path</b> field to query operations.
     * 
     */
    public final static APIResourceField<String> RESOURCE_PATH = new APIResourceField<String>("resource_path");
    /**
     * Constraints: Not nullable, Maximum length: 255 <p>Original property name from the Odata EDM: <b>title</b></p>
     * 
     * @return
     *     The title contained in this entity.
     */
    @SerializedName("title")
    @JsonProperty("title")
    @Nullable
    @ODataField(odataName = "title")
    private String title;
    /**
     * Use with available fluent helpers to apply the <b>title</b> field to query operations.
     * 
     */
    public final static APIResourceField<String> TITLE = new APIResourceField<String>("title");
    /**
     * Constraints: Not nullable, Maximum length: 16000 <p>Original property name from the Odata EDM: <b>description</b></p>
     * 
     * @return
     *     The description contained in this entity.
     */
    @SerializedName("description")
    @JsonProperty("description")
    @Nullable
    @ODataField(odataName = "description")
    private String description;
    /**
     * Use with available fluent helpers to apply the <b>description</b> field to query operations.
     * 
     */
    public final static APIResourceField<String> DESCRIPTION = new APIResourceField<String>("description");
    /**
     * Navigation property <b>apiProxyEndPoint</b> for <b>APIResource</b> to single <b>APIProxyEndPoint</b>.
     * 
     */
    @SerializedName("apiProxyEndPoint")
    @JsonProperty("apiProxyEndPoint")
    @ODataField(odataName = "apiProxyEndPoint")
    @Nullable
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private APIProxyEndPoint toApiProxyEndPoint;
    /**
     * Navigation property <b>documentations</b> for <b>APIResource</b> to multiple <b>Documentation</b>.
     * 
     */
    @SerializedName("documentations")
    @JsonProperty("documentations")
    @ODataField(odataName = "documentations")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<Documentation> toDocumentations;
    /**
     * Navigation property <b>resources</b> for <b>APIResource</b> to multiple <b>Resource</b>.
     * 
     */
    @SerializedName("resources")
    @JsonProperty("resources")
    @ODataField(odataName = "resources")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<Resource> toResources;
    /**
     * Use with available fluent helpers to apply the <b>apiProxyEndPoint</b> navigation property to query operations.
     * 
     */
    public final static APIResourceOneToOneLink<APIProxyEndPoint> TO_API_PROXY_END_POINT = new APIResourceOneToOneLink<APIProxyEndPoint>("apiProxyEndPoint");
    /**
     * Use with available fluent helpers to apply the <b>documentations</b> navigation property to query operations.
     * 
     */
    public final static APIResourceLink<Documentation> TO_DOCUMENTATIONS = new APIResourceLink<Documentation>("documentations");
    /**
     * Use with available fluent helpers to apply the <b>resources</b> navigation property to query operations.
     * 
     */
    public final static APIResourceLink<Resource> TO_RESOURCES = new APIResourceLink<Resource>("resources");

    @Nonnull
    @Override
    public Class<APIResource> getType() {
        return APIResource.class;
    }

    /**
     * Constraints: Nullable, Maximum length: 36 <p>Original property name from the Odata EDM: <b>FK_PROXYENDPOINT_ID</b></p>
     * 
     * @param fK_PROXYENDPOINT_ID
     *     The fK_PROXYENDPOINT_ID to set.
     */
    public void setFK_PROXYENDPOINT_ID(
        @Nullable
        final String fK_PROXYENDPOINT_ID) {
        rememberChangedField("FK_PROXYENDPOINT_ID", this.fK_PROXYENDPOINT_ID);
        this.fK_PROXYENDPOINT_ID = fK_PROXYENDPOINT_ID;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>canShowDelete</b></p>
     * 
     * @param canShowDelete
     *     The canShowDelete to set.
     */
    public void setCanShowDelete(
        @Nullable
        final Boolean canShowDelete) {
        rememberChangedField("canShowDelete", this.canShowDelete);
        this.canShowDelete = canShowDelete;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>canShowGet</b></p>
     * 
     * @param canShowGet
     *     The canShowGet to set.
     */
    public void setCanShowGet(
        @Nullable
        final Boolean canShowGet) {
        rememberChangedField("canShowGet", this.canShowGet);
        this.canShowGet = canShowGet;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>canShowHead</b></p>
     * 
     * @param canShowHead
     *     The canShowHead to set.
     */
    public void setCanShowHead(
        @Nullable
        final Boolean canShowHead) {
        rememberChangedField("canShowHead", this.canShowHead);
        this.canShowHead = canShowHead;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>canShowOption</b></p>
     * 
     * @param canShowOption
     *     The canShowOption to set.
     */
    public void setCanShowOption(
        @Nullable
        final Boolean canShowOption) {
        rememberChangedField("canShowOption", this.canShowOption);
        this.canShowOption = canShowOption;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>canShowPatch</b></p>
     * 
     * @param canShowPatch
     *     The canShowPatch to set.
     */
    public void setCanShowPatch(
        @Nullable
        final Boolean canShowPatch) {
        rememberChangedField("canShowPatch", this.canShowPatch);
        this.canShowPatch = canShowPatch;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>canShowPost</b></p>
     * 
     * @param canShowPost
     *     The canShowPost to set.
     */
    public void setCanShowPost(
        @Nullable
        final Boolean canShowPost) {
        rememberChangedField("canShowPost", this.canShowPost);
        this.canShowPost = canShowPost;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>canShowPut</b></p>
     * 
     * @param canShowPut
     *     The canShowPut to set.
     */
    public void setCanShowPut(
        @Nullable
        final Boolean canShowPut) {
        rememberChangedField("canShowPut", this.canShowPut);
        this.canShowPut = canShowPut;
    }

    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 36 <p>Original property name from the Odata EDM: <b>id</b></p>
     * 
     * @param id
     *     The id to set.
     */
    public void setId(
        @Nullable
        final String id) {
        rememberChangedField("id", this.id);
        this.id = id;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>isDeleteChecked</b></p>
     * 
     * @param isDeleteChecked
     *     The isDeleteChecked to set.
     */
    public void setIsDeleteChecked(
        @Nullable
        final Boolean isDeleteChecked) {
        rememberChangedField("isDeleteChecked", this.isDeleteChecked);
        this.isDeleteChecked = isDeleteChecked;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>isGetChecked</b></p>
     * 
     * @param isGetChecked
     *     The isGetChecked to set.
     */
    public void setIsGetChecked(
        @Nullable
        final Boolean isGetChecked) {
        rememberChangedField("isGetChecked", this.isGetChecked);
        this.isGetChecked = isGetChecked;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>isHeadChecked</b></p>
     * 
     * @param isHeadChecked
     *     The isHeadChecked to set.
     */
    public void setIsHeadChecked(
        @Nullable
        final Boolean isHeadChecked) {
        rememberChangedField("isHeadChecked", this.isHeadChecked);
        this.isHeadChecked = isHeadChecked;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>isOptionChecked</b></p>
     * 
     * @param isOptionChecked
     *     The isOptionChecked to set.
     */
    public void setIsOptionChecked(
        @Nullable
        final Boolean isOptionChecked) {
        rememberChangedField("isOptionChecked", this.isOptionChecked);
        this.isOptionChecked = isOptionChecked;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>isPatchChecked</b></p>
     * 
     * @param isPatchChecked
     *     The isPatchChecked to set.
     */
    public void setIsPatchChecked(
        @Nullable
        final Boolean isPatchChecked) {
        rememberChangedField("isPatchChecked", this.isPatchChecked);
        this.isPatchChecked = isPatchChecked;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>isPostChecked</b></p>
     * 
     * @param isPostChecked
     *     The isPostChecked to set.
     */
    public void setIsPostChecked(
        @Nullable
        final Boolean isPostChecked) {
        rememberChangedField("isPostChecked", this.isPostChecked);
        this.isPostChecked = isPostChecked;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>isPutChecked</b></p>
     * 
     * @param isPutChecked
     *     The isPutChecked to set.
     */
    public void setIsPutChecked(
        @Nullable
        final Boolean isPutChecked) {
        rememberChangedField("isPutChecked", this.isPutChecked);
        this.isPutChecked = isPutChecked;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>life_cycle</b></p>
     * 
     * @param life_cycle
     *     The life_cycle to set.
     */
    public void setLife_cycle(
        @Nullable
        final History life_cycle) {
        rememberChangedField("life_cycle", this.life_cycle);
        this.life_cycle = life_cycle;
    }

    /**
     * Constraints: Nullable, Maximum length: 1024 <p>Original property name from the Odata EDM: <b>name</b></p>
     * 
     * @param name
     *     The name to set.
     */
    public void setName(
        @Nullable
        final String name) {
        rememberChangedField("name", this.name);
        this.name = name;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>proxyEndPointName</b></p>
     * 
     * @param proxyEndPointName
     *     The proxyEndPointName to set.
     */
    public void setProxyEndPointName(
        @Nullable
        final String proxyEndPointName) {
        rememberChangedField("proxyEndPointName", this.proxyEndPointName);
        this.proxyEndPointName = proxyEndPointName;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>resource_path</b></p>
     * 
     * @param resource_path
     *     The resource_path to set.
     */
    public void setResource_path(
        @Nullable
        final String resource_path) {
        rememberChangedField("resource_path", this.resource_path);
        this.resource_path = resource_path;
    }

    /**
     * Constraints: Not nullable, Maximum length: 255 <p>Original property name from the Odata EDM: <b>title</b></p>
     * 
     * @param title
     *     The title to set.
     */
    public void setTitle(
        @Nullable
        final String title) {
        rememberChangedField("title", this.title);
        this.title = title;
    }

    /**
     * Constraints: Not nullable, Maximum length: 16000 <p>Original property name from the Odata EDM: <b>description</b></p>
     * 
     * @param description
     *     The description to set.
     */
    public void setDescription(
        @Nullable
        final String description) {
        rememberChangedField("description", this.description);
        this.description = description;
    }

    @Override
    protected String getEntityCollection() {
        return "APIResources";
    }

    @Nonnull
    @Override
    protected Map<String, Object> getKey() {
        final Map<String, Object> result = Maps.newHashMap();
        result.put("id", getId());
        return result;
    }

    @Nonnull
    @Override
    protected Map<String, Object> toMapOfFields() {
        final Map<String, Object> values = super.toMapOfFields();
        values.put("FK_PROXYENDPOINT_ID", getFK_PROXYENDPOINT_ID());
        values.put("canShowDelete", getCanShowDelete());
        values.put("canShowGet", getCanShowGet());
        values.put("canShowHead", getCanShowHead());
        values.put("canShowOption", getCanShowOption());
        values.put("canShowPatch", getCanShowPatch());
        values.put("canShowPost", getCanShowPost());
        values.put("canShowPut", getCanShowPut());
        values.put("id", getId());
        values.put("isDeleteChecked", getIsDeleteChecked());
        values.put("isGetChecked", getIsGetChecked());
        values.put("isHeadChecked", getIsHeadChecked());
        values.put("isOptionChecked", getIsOptionChecked());
        values.put("isPatchChecked", getIsPatchChecked());
        values.put("isPostChecked", getIsPostChecked());
        values.put("isPutChecked", getIsPutChecked());
        values.put("life_cycle", getLife_cycle());
        values.put("name", getName());
        values.put("proxyEndPointName", getProxyEndPointName());
        values.put("resource_path", getResource_path());
        values.put("title", getTitle());
        values.put("description", getDescription());
        return values;
    }

    @Override
    protected void fromMap(final Map<String, Object> inputValues) {
        final Map<String, Object> values = Maps.newHashMap(inputValues);
        // simple properties
        {
            if (values.containsKey("FK_PROXYENDPOINT_ID")) {
                final Object value = values.remove("FK_PROXYENDPOINT_ID");
                if ((value == null)||(!value.equals(getFK_PROXYENDPOINT_ID()))) {
                    setFK_PROXYENDPOINT_ID(((String) value));
                }
            }
            if (values.containsKey("canShowDelete")) {
                final Object value = values.remove("canShowDelete");
                if ((value == null)||(!value.equals(getCanShowDelete()))) {
                    setCanShowDelete(((Boolean) value));
                }
            }
            if (values.containsKey("canShowGet")) {
                final Object value = values.remove("canShowGet");
                if ((value == null)||(!value.equals(getCanShowGet()))) {
                    setCanShowGet(((Boolean) value));
                }
            }
            if (values.containsKey("canShowHead")) {
                final Object value = values.remove("canShowHead");
                if ((value == null)||(!value.equals(getCanShowHead()))) {
                    setCanShowHead(((Boolean) value));
                }
            }
            if (values.containsKey("canShowOption")) {
                final Object value = values.remove("canShowOption");
                if ((value == null)||(!value.equals(getCanShowOption()))) {
                    setCanShowOption(((Boolean) value));
                }
            }
            if (values.containsKey("canShowPatch")) {
                final Object value = values.remove("canShowPatch");
                if ((value == null)||(!value.equals(getCanShowPatch()))) {
                    setCanShowPatch(((Boolean) value));
                }
            }
            if (values.containsKey("canShowPost")) {
                final Object value = values.remove("canShowPost");
                if ((value == null)||(!value.equals(getCanShowPost()))) {
                    setCanShowPost(((Boolean) value));
                }
            }
            if (values.containsKey("canShowPut")) {
                final Object value = values.remove("canShowPut");
                if ((value == null)||(!value.equals(getCanShowPut()))) {
                    setCanShowPut(((Boolean) value));
                }
            }
            if (values.containsKey("id")) {
                final Object value = values.remove("id");
                if ((value == null)||(!value.equals(getId()))) {
                    setId(((String) value));
                }
            }
            if (values.containsKey("isDeleteChecked")) {
                final Object value = values.remove("isDeleteChecked");
                if ((value == null)||(!value.equals(getIsDeleteChecked()))) {
                    setIsDeleteChecked(((Boolean) value));
                }
            }
            if (values.containsKey("isGetChecked")) {
                final Object value = values.remove("isGetChecked");
                if ((value == null)||(!value.equals(getIsGetChecked()))) {
                    setIsGetChecked(((Boolean) value));
                }
            }
            if (values.containsKey("isHeadChecked")) {
                final Object value = values.remove("isHeadChecked");
                if ((value == null)||(!value.equals(getIsHeadChecked()))) {
                    setIsHeadChecked(((Boolean) value));
                }
            }
            if (values.containsKey("isOptionChecked")) {
                final Object value = values.remove("isOptionChecked");
                if ((value == null)||(!value.equals(getIsOptionChecked()))) {
                    setIsOptionChecked(((Boolean) value));
                }
            }
            if (values.containsKey("isPatchChecked")) {
                final Object value = values.remove("isPatchChecked");
                if ((value == null)||(!value.equals(getIsPatchChecked()))) {
                    setIsPatchChecked(((Boolean) value));
                }
            }
            if (values.containsKey("isPostChecked")) {
                final Object value = values.remove("isPostChecked");
                if ((value == null)||(!value.equals(getIsPostChecked()))) {
                    setIsPostChecked(((Boolean) value));
                }
            }
            if (values.containsKey("isPutChecked")) {
                final Object value = values.remove("isPutChecked");
                if ((value == null)||(!value.equals(getIsPutChecked()))) {
                    setIsPutChecked(((Boolean) value));
                }
            }
            if (values.containsKey("name")) {
                final Object value = values.remove("name");
                if ((value == null)||(!value.equals(getName()))) {
                    setName(((String) value));
                }
            }
            if (values.containsKey("proxyEndPointName")) {
                final Object value = values.remove("proxyEndPointName");
                if ((value == null)||(!value.equals(getProxyEndPointName()))) {
                    setProxyEndPointName(((String) value));
                }
            }
            if (values.containsKey("resource_path")) {
                final Object value = values.remove("resource_path");
                if ((value == null)||(!value.equals(getResource_path()))) {
                    setResource_path(((String) value));
                }
            }
            if (values.containsKey("title")) {
                final Object value = values.remove("title");
                if ((value == null)||(!value.equals(getTitle()))) {
                    setTitle(((String) value));
                }
            }
            if (values.containsKey("description")) {
                final Object value = values.remove("description");
                if ((value == null)||(!value.equals(getDescription()))) {
                    setDescription(((String) value));
                }
            }
        }
        // structured properties
        {
            if (values.containsKey("life_cycle")) {
                final Object value = values.remove("life_cycle");
                if (value instanceof Map) {
                    if (getLife_cycle() == null) {
                        setLife_cycle(new History());
                    }
                    @SuppressWarnings("unchecked")
                    final Map<String, Object> inputMap = ((Map<String, Object> ) value);
                    getLife_cycle().fromMap(inputMap);
                }
                if ((value == null)&&(getLife_cycle()!= null)) {
                    setLife_cycle(null);
                }
            }
        }
        // navigation properties
        {
            if ((values).containsKey("apiProxyEndPoint")) {
                final Object value = (values).remove("apiProxyEndPoint");
                if (value instanceof Map) {
                    if (toApiProxyEndPoint == null) {
                        toApiProxyEndPoint = new APIProxyEndPoint();
                    }
                    @SuppressWarnings("unchecked")
                    final Map<String, Object> inputMap = ((Map<String, Object> ) value);
                    toApiProxyEndPoint.fromMap(inputMap);
                }
            }
            if ((values).containsKey("documentations")) {
                final Object value = (values).remove("documentations");
                if (value instanceof Iterable) {
                    if (toDocumentations == null) {
                        toDocumentations = Lists.newArrayList();
                    } else {
                        toDocumentations = Lists.newArrayList(toDocumentations);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        Documentation entity;
                        if (toDocumentations.size()>i) {
                            entity = toDocumentations.get(i);
                        } else {
                            entity = new Documentation();
                            toDocumentations.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("resources")) {
                final Object value = (values).remove("resources");
                if (value instanceof Iterable) {
                    if (toResources == null) {
                        toResources = Lists.newArrayList();
                    } else {
                        toResources = Lists.newArrayList(toResources);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        Resource entity;
                        if (toResources.size()>i) {
                            entity = toResources.get(i);
                        } else {
                            entity = new Resource();
                            toResources.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
        }
        super.fromMap(values);
    }

    /**
     * Use with available fluent helpers to apply an extension field to query operations.
     * 
     * @param fieldName
     *     The name of the extension field as returned by the OData service.
     * @param <T>
     *     The type of the extension field when performing value comparisons.
     * @param fieldType
     *     The Java type to use for the extension field when performing value comparisons.
     * @return
     *     A representation of an extension field from this entity.
     */
    @Nonnull
    public static<T >APIResourceField<T> field(
        @Nonnull
        final String fieldName,
        @Nonnull
        final Class<T> fieldType) {
        return new APIResourceField<T>(fieldName);
    }

    /**
     * Use with available fluent helpers to apply an extension field to query operations.
     * 
     * @param typeConverter
     *     A TypeConverter<T, DomainT> instance whose first generic type matches the Java type of the field
     * @param fieldName
     *     The name of the extension field as returned by the OData service.
     * @param <T>
     *     The type of the extension field when performing value comparisons.
     * @param <DomainT>
     *     The type of the extension field as returned by the OData service.
     * @return
     *     A representation of an extension field from this entity, holding a reference to the given TypeConverter.
     */
    @Nonnull
    public static<T,DomainT >APIResourceField<T> field(
        @Nonnull
        final String fieldName,
        @Nonnull
        final TypeConverter<T, DomainT> typeConverter) {
        return new APIResourceField<T>(fieldName, typeConverter);
    }

    @Override
    @Nullable
    public HttpDestinationProperties getDestinationForFetch() {
        return super.getDestinationForFetch();
    }

    @Override
    protected void setServicePathForFetch(
        @Nullable
        final String servicePathForFetch) {
        super.setServicePathForFetch(servicePathForFetch);
    }

    @Override
    public void attachToService(
        @Nullable
        final String servicePath,
        @Nonnull
        final HttpDestinationProperties destination) {
        super.attachToService(servicePath, destination);
    }

    @Override
    protected String getDefaultServicePath() {
        return (com.mycompany.vdm.services.APIPortalApplicationsCFService.DEFAULT_SERVICE_PATH);
    }

    @Nonnull
    @Override
    protected Map<String, Object> toMapOfNavigationProperties() {
        final Map<String, Object> values = super.toMapOfNavigationProperties();
        if (toApiProxyEndPoint!= null) {
            (values).put("apiProxyEndPoint", toApiProxyEndPoint);
        }
        if (toDocumentations!= null) {
            (values).put("documentations", toDocumentations);
        }
        if (toResources!= null) {
            (values).put("resources", toResources);
        }
        return values;
    }

    /**
     * Fetches the <b>APIProxyEndPoint</b> entity (one to one) associated with this entity. This corresponds to the OData navigation property <b>apiProxyEndPoint</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     The single associated <b>APIProxyEndPoint</b> entity, or {@code null} if an entity is not associated. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nullable
    public APIProxyEndPoint fetchApiProxyEndPoint()
        throws ODataException
    {
        final HttpDestinationProperties destination = getDestinationForFetch();
        if (destination == null) {
            throw new ODataException(ODataExceptionType.OTHER, "Failed to fetch related objects of type APIProxyEndPoint.", new IllegalStateException("Unable to execute OData query. The entity was created locally without an assigned HttpDestination. This method is applicable only on entities which were retrieved or created using the OData VDM."));
        }
        final StringBuilder odataResourceUrl = new StringBuilder(getEntityCollection());
        odataResourceUrl.append("(");
        odataResourceUrl.append("id=");
        odataResourceUrl.append(ODataTypeValueSerializer.of(EdmSimpleTypeKind.String).toUri(id));
        odataResourceUrl.append(")/");
        odataResourceUrl.append("apiProxyEndPoint");
        final ODataQueryBuilder builder = ODataQueryBuilder.withEntity(getServicePathForFetch(), odataResourceUrl.toString()).withoutMetadata();
        final ODataQuery query = builder.build();
        final HttpClient httpClient = HttpClientAccessor.getHttpClient(destination);
        final ODataQueryResult result = query.execute(httpClient);
        final APIProxyEndPoint entity = result.as(APIProxyEndPoint.class);
        entity.attachToService(getServicePathForFetch(), destination);
        return entity;
    }

    /**
     * Retrieval of associated <b>APIProxyEndPoint</b> entity (one to one). This corresponds to the OData navigation property <b>apiProxyEndPoint</b>.
     * <p>
     * If the navigation property <b>apiProxyEndPoint</b> of a queried <b>APIResource</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>APIProxyEndPoint</b> entity.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nullable
    public APIProxyEndPoint getApiProxyEndPointOrFetch()
        throws ODataException
    {
        if (toApiProxyEndPoint == null) {
            toApiProxyEndPoint = fetchApiProxyEndPoint();
        }
        return toApiProxyEndPoint;
    }

    /**
     * Retrieval of associated <b>APIProxyEndPoint</b> entity (one to one). This corresponds to the OData navigation property <b>apiProxyEndPoint</b>.
     * <p>
     * If the navigation property for an entity <b>APIResource</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>apiProxyEndPoint</b> is already loaded, the result will contain the <b>APIProxyEndPoint</b> entity. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<APIProxyEndPoint> getApiProxyEndPointIfPresent() {
        return Option.of(toApiProxyEndPoint);
    }

    /**
     * Overwrites the associated <b>APIProxyEndPoint</b> entity for the loaded navigation property <b>apiProxyEndPoint</b>.
     * 
     * @param value
     *     New <b>APIProxyEndPoint</b> entity.
     */
    public void setApiProxyEndPoint(final APIProxyEndPoint value) {
        toApiProxyEndPoint = value;
    }

    /**
     * Fetches the <b>Documentation</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>documentations</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>Documentation</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Documentation> fetchDocumentations()
        throws ODataException
    {
        final HttpDestinationProperties destination = getDestinationForFetch();
        if (destination == null) {
            throw new ODataException(ODataExceptionType.OTHER, "Failed to fetch related objects of type Documentation.", new IllegalStateException("Unable to execute OData query. The entity was created locally without an assigned HttpDestination. This method is applicable only on entities which were retrieved or created using the OData VDM."));
        }
        final StringBuilder odataResourceUrl = new StringBuilder(getEntityCollection());
        odataResourceUrl.append("(");
        odataResourceUrl.append("id=");
        odataResourceUrl.append(ODataTypeValueSerializer.of(EdmSimpleTypeKind.String).toUri(id));
        odataResourceUrl.append(")/");
        odataResourceUrl.append("documentations");
        final ODataQueryBuilder builder = ODataQueryBuilder.withEntity(getServicePathForFetch(), odataResourceUrl.toString()).withoutMetadata();
        final ODataQuery query = builder.build();
        final HttpClient httpClient = HttpClientAccessor.getHttpClient(destination);
        final ODataQueryResult result = query.execute(httpClient);
        final List<Documentation> entityList = result.asList(Documentation.class);
        for (Documentation entity: entityList) {
            entity.attachToService(getServicePathForFetch(), destination);
        }
        return entityList;
    }

    /**
     * Retrieval of associated <b>Documentation</b> entities (one to many). This corresponds to the OData navigation property <b>documentations</b>.
     * <p>
     * If the navigation property <b>documentations</b> of a queried <b>APIResource</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>Documentation</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Documentation> getDocumentationsOrFetch()
        throws ODataException
    {
        if (toDocumentations == null) {
            toDocumentations = fetchDocumentations();
        }
        return toDocumentations;
    }

    /**
     * Retrieval of associated <b>Documentation</b> entities (one to many). This corresponds to the OData navigation property <b>documentations</b>.
     * <p>
     * If the navigation property for an entity <b>APIResource</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>documentations</b> is already loaded, the result will contain the <b>Documentation</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<Documentation>> getDocumentationsIfPresent() {
        return Option.of(toDocumentations);
    }

    /**
     * Overwrites the list of associated <b>Documentation</b> entities for the loaded navigation property <b>documentations</b>.
     * <p>
     * If the navigation property <b>documentations</b> of a queried <b>APIResource</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>Documentation</b> entities.
     */
    public void setDocumentations(
        @Nonnull
        final List<Documentation> value) {
        if (toDocumentations == null) {
            toDocumentations = Lists.newArrayList();
        }
        toDocumentations.clear();
        toDocumentations.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>Documentation</b> entities. This corresponds to the OData navigation property <b>documentations</b>.
     * <p>
     * If the navigation property <b>documentations</b> of a queried <b>APIResource</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>Documentation</b> entities.
     */
    public void addDocumentations(Documentation... entity) {
        if (toDocumentations == null) {
            toDocumentations = Lists.newArrayList();
        }
        toDocumentations.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>Resource</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>resources</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>Resource</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Resource> fetchResources()
        throws ODataException
    {
        final HttpDestinationProperties destination = getDestinationForFetch();
        if (destination == null) {
            throw new ODataException(ODataExceptionType.OTHER, "Failed to fetch related objects of type Resource.", new IllegalStateException("Unable to execute OData query. The entity was created locally without an assigned HttpDestination. This method is applicable only on entities which were retrieved or created using the OData VDM."));
        }
        final StringBuilder odataResourceUrl = new StringBuilder(getEntityCollection());
        odataResourceUrl.append("(");
        odataResourceUrl.append("id=");
        odataResourceUrl.append(ODataTypeValueSerializer.of(EdmSimpleTypeKind.String).toUri(id));
        odataResourceUrl.append(")/");
        odataResourceUrl.append("resources");
        final ODataQueryBuilder builder = ODataQueryBuilder.withEntity(getServicePathForFetch(), odataResourceUrl.toString()).withoutMetadata();
        final ODataQuery query = builder.build();
        final HttpClient httpClient = HttpClientAccessor.getHttpClient(destination);
        final ODataQueryResult result = query.execute(httpClient);
        final List<Resource> entityList = result.asList(Resource.class);
        for (Resource entity: entityList) {
            entity.attachToService(getServicePathForFetch(), destination);
        }
        return entityList;
    }

    /**
     * Retrieval of associated <b>Resource</b> entities (one to many). This corresponds to the OData navigation property <b>resources</b>.
     * <p>
     * If the navigation property <b>resources</b> of a queried <b>APIResource</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>Resource</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Resource> getResourcesOrFetch()
        throws ODataException
    {
        if (toResources == null) {
            toResources = fetchResources();
        }
        return toResources;
    }

    /**
     * Retrieval of associated <b>Resource</b> entities (one to many). This corresponds to the OData navigation property <b>resources</b>.
     * <p>
     * If the navigation property for an entity <b>APIResource</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>resources</b> is already loaded, the result will contain the <b>Resource</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<Resource>> getResourcesIfPresent() {
        return Option.of(toResources);
    }

    /**
     * Overwrites the list of associated <b>Resource</b> entities for the loaded navigation property <b>resources</b>.
     * <p>
     * If the navigation property <b>resources</b> of a queried <b>APIResource</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>Resource</b> entities.
     */
    public void setResources(
        @Nonnull
        final List<Resource> value) {
        if (toResources == null) {
            toResources = Lists.newArrayList();
        }
        toResources.clear();
        toResources.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>Resource</b> entities. This corresponds to the OData navigation property <b>resources</b>.
     * <p>
     * If the navigation property <b>resources</b> of a queried <b>APIResource</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>Resource</b> entities.
     */
    public void addResources(Resource... entity) {
        if (toResources == null) {
            toResources = Lists.newArrayList();
        }
        toResources.addAll(Lists.newArrayList(entity));
    }


    /**
     * Helper class to allow for fluent creation of APIResource instances.
     * 
     */
    public final static class APIResourceBuilder {

        private APIProxyEndPoint toApiProxyEndPoint;
        private List<Documentation> toDocumentations = Lists.newArrayList();
        private List<Resource> toResources = Lists.newArrayList();

        private APIResource.APIResourceBuilder toApiProxyEndPoint(final APIProxyEndPoint value) {
            toApiProxyEndPoint = value;
            return this;
        }

        /**
         * Navigation property <b>apiProxyEndPoint</b> for <b>APIResource</b> to single <b>APIProxyEndPoint</b>.
         * 
         * @param value
         *     The APIProxyEndPoint to build this APIResource with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public APIResource.APIResourceBuilder apiProxyEndPoint(final APIProxyEndPoint value) {
            return toApiProxyEndPoint(value);
        }

        private APIResource.APIResourceBuilder toDocumentations(final List<Documentation> value) {
            toDocumentations.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>documentations</b> for <b>APIResource</b> to multiple <b>Documentation</b>.
         * 
         * @param value
         *     The Documentations to build this APIResource with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public APIResource.APIResourceBuilder documentations(Documentation... value) {
            return toDocumentations(Lists.newArrayList(value));
        }

        private APIResource.APIResourceBuilder toResources(final List<Resource> value) {
            toResources.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>resources</b> for <b>APIResource</b> to multiple <b>Resource</b>.
         * 
         * @param value
         *     The Resources to build this APIResource with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public APIResource.APIResourceBuilder resources(Resource... value) {
            return toResources(Lists.newArrayList(value));
        }

    }

}
