
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 3.69.0
 */

package com.mycompany.vdm.namespaces.portalapplicationscf;

import java.util.Map;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.sap.cloud.sdk.datamodel.odata.helper.VdmComplex;
import com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataField;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.ToString;


/**
 * <p>Original complex type name from the Odata EDM: <b>SSLInfo</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataVdmEntityAdapterFactory.class)
public class SSLInfo
    extends VdmComplex<SSLInfo>
{

    /**
     * Constraints: Nullable, Maximum length: 255 <p>Original property from the Odata EDM: <b>ciphers</b></p>
     * 
     * @param ciphers
     *     
     */
    @SerializedName("ciphers")
    @JsonProperty("ciphers")
    @Nullable
    @ODataField(odataName = "ciphers")
    private String ciphers;
    /**
     * Constraints: Nullable<p>Original property from the Odata EDM: <b>clientAuthEnabled</b></p>
     * 
     * @param clientAuthEnabled
     *     
     */
    @SerializedName("clientAuthEnabled")
    @JsonProperty("clientAuthEnabled")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "clientAuthEnabled")
    private Boolean clientAuthEnabled;
    /**
     * Constraints: Nullable<p>Original property from the Odata EDM: <b>enabled</b></p>
     * 
     * @param enabled
     *     
     */
    @SerializedName("enabled")
    @JsonProperty("enabled")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "enabled")
    private Boolean enabled;
    /**
     * Constraints: Nullable<p>Original property from the Odata EDM: <b>ignoreValidationErrors</b></p>
     * 
     * @param ignoreValidationErrors
     *     
     */
    @SerializedName("ignoreValidationErrors")
    @JsonProperty("ignoreValidationErrors")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "ignoreValidationErrors")
    private Boolean ignoreValidationErrors;
    /**
     * Constraints: Nullable, Maximum length: 255 <p>Original property from the Odata EDM: <b>keyAlias</b></p>
     * 
     * @param keyAlias
     *     
     */
    @SerializedName("keyAlias")
    @JsonProperty("keyAlias")
    @Nullable
    @ODataField(odataName = "keyAlias")
    private String keyAlias;
    /**
     * Constraints: Nullable, Maximum length: 255 <p>Original property from the Odata EDM: <b>keyStore</b></p>
     * 
     * @param keyStore
     *     
     */
    @SerializedName("keyStore")
    @JsonProperty("keyStore")
    @Nullable
    @ODataField(odataName = "keyStore")
    private String keyStore;
    /**
     * Constraints: Nullable, Maximum length: 255 <p>Original property from the Odata EDM: <b>protocols</b></p>
     * 
     * @param protocols
     *     
     */
    @SerializedName("protocols")
    @JsonProperty("protocols")
    @Nullable
    @ODataField(odataName = "protocols")
    private String protocols;
    /**
     * Constraints: Nullable, Maximum length: 255 <p>Original property from the Odata EDM: <b>trustStore</b></p>
     * 
     * @param trustStore
     *     
     */
    @SerializedName("trustStore")
    @JsonProperty("trustStore")
    @Nullable
    @ODataField(odataName = "trustStore")
    private String trustStore;

    @Nonnull
    @Override
    public Class<SSLInfo> getType() {
        return SSLInfo.class;
    }

    @Nonnull
    @Override
    protected Map<String, Object> toMapOfFields() {
        final Map<String, Object> values = super.toMapOfFields();
        values.put("ciphers", getCiphers());
        values.put("clientAuthEnabled", getClientAuthEnabled());
        values.put("enabled", getEnabled());
        values.put("ignoreValidationErrors", getIgnoreValidationErrors());
        values.put("keyAlias", getKeyAlias());
        values.put("keyStore", getKeyStore());
        values.put("protocols", getProtocols());
        values.put("trustStore", getTrustStore());
        return values;
    }

    @Override
    protected void fromMap(final Map<String, Object> inputValues) {
        final Map<String, Object> values = Maps.newHashMap(inputValues);
        // simple properties
        {
            if (values.containsKey("ciphers")) {
                final Object value = values.remove("ciphers");
                if ((value == null)||(!value.equals(getCiphers()))) {
                    setCiphers(((String) value));
                }
            }
            if (values.containsKey("clientAuthEnabled")) {
                final Object value = values.remove("clientAuthEnabled");
                if ((value == null)||(!value.equals(getClientAuthEnabled()))) {
                    setClientAuthEnabled(((Boolean) value));
                }
            }
            if (values.containsKey("enabled")) {
                final Object value = values.remove("enabled");
                if ((value == null)||(!value.equals(getEnabled()))) {
                    setEnabled(((Boolean) value));
                }
            }
            if (values.containsKey("ignoreValidationErrors")) {
                final Object value = values.remove("ignoreValidationErrors");
                if ((value == null)||(!value.equals(getIgnoreValidationErrors()))) {
                    setIgnoreValidationErrors(((Boolean) value));
                }
            }
            if (values.containsKey("keyAlias")) {
                final Object value = values.remove("keyAlias");
                if ((value == null)||(!value.equals(getKeyAlias()))) {
                    setKeyAlias(((String) value));
                }
            }
            if (values.containsKey("keyStore")) {
                final Object value = values.remove("keyStore");
                if ((value == null)||(!value.equals(getKeyStore()))) {
                    setKeyStore(((String) value));
                }
            }
            if (values.containsKey("protocols")) {
                final Object value = values.remove("protocols");
                if ((value == null)||(!value.equals(getProtocols()))) {
                    setProtocols(((String) value));
                }
            }
            if (values.containsKey("trustStore")) {
                final Object value = values.remove("trustStore");
                if ((value == null)||(!value.equals(getTrustStore()))) {
                    setTrustStore(((String) value));
                }
            }
        }
        // structured properties
        {
        }
        // navigation properties
        {
        }
        super.fromMap(values);
    }

    @Nonnull
    @Override
    protected Map<String, Object> getKey() {
        final Map<String, Object> result = Maps.newHashMap();
        return result;
    }

    /**
     * Constraints: Nullable, Maximum length: 255 <p>Original property from the Odata EDM: <b>ciphers</b></p>
     * 
     * @param ciphers
     *     The ciphers to set.
     */
    public void setCiphers(
        @Nullable
        final String ciphers) {
        rememberChangedField("ciphers", this.ciphers);
        this.ciphers = ciphers;
    }

    /**
     * Constraints: Nullable<p>Original property from the Odata EDM: <b>clientAuthEnabled</b></p>
     * 
     * @param clientAuthEnabled
     *     The clientAuthEnabled to set.
     */
    public void setClientAuthEnabled(
        @Nullable
        final Boolean clientAuthEnabled) {
        rememberChangedField("clientAuthEnabled", this.clientAuthEnabled);
        this.clientAuthEnabled = clientAuthEnabled;
    }

    /**
     * Constraints: Nullable<p>Original property from the Odata EDM: <b>enabled</b></p>
     * 
     * @param enabled
     *     The enabled to set.
     */
    public void setEnabled(
        @Nullable
        final Boolean enabled) {
        rememberChangedField("enabled", this.enabled);
        this.enabled = enabled;
    }

    /**
     * Constraints: Nullable<p>Original property from the Odata EDM: <b>ignoreValidationErrors</b></p>
     * 
     * @param ignoreValidationErrors
     *     The ignoreValidationErrors to set.
     */
    public void setIgnoreValidationErrors(
        @Nullable
        final Boolean ignoreValidationErrors) {
        rememberChangedField("ignoreValidationErrors", this.ignoreValidationErrors);
        this.ignoreValidationErrors = ignoreValidationErrors;
    }

    /**
     * Constraints: Nullable, Maximum length: 255 <p>Original property from the Odata EDM: <b>keyAlias</b></p>
     * 
     * @param keyAlias
     *     The keyAlias to set.
     */
    public void setKeyAlias(
        @Nullable
        final String keyAlias) {
        rememberChangedField("keyAlias", this.keyAlias);
        this.keyAlias = keyAlias;
    }

    /**
     * Constraints: Nullable, Maximum length: 255 <p>Original property from the Odata EDM: <b>keyStore</b></p>
     * 
     * @param keyStore
     *     The keyStore to set.
     */
    public void setKeyStore(
        @Nullable
        final String keyStore) {
        rememberChangedField("keyStore", this.keyStore);
        this.keyStore = keyStore;
    }

    /**
     * Constraints: Nullable, Maximum length: 255 <p>Original property from the Odata EDM: <b>protocols</b></p>
     * 
     * @param protocols
     *     The protocols to set.
     */
    public void setProtocols(
        @Nullable
        final String protocols) {
        rememberChangedField("protocols", this.protocols);
        this.protocols = protocols;
    }

    /**
     * Constraints: Nullable, Maximum length: 255 <p>Original property from the Odata EDM: <b>trustStore</b></p>
     * 
     * @param trustStore
     *     The trustStore to set.
     */
    public void setTrustStore(
        @Nullable
        final String trustStore) {
        rememberChangedField("trustStore", this.trustStore);
        this.trustStore = trustStore;
    }

}
