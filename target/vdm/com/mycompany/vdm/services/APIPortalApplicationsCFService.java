
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 3.69.0
 */

package com.mycompany.vdm.services;

import java.time.LocalDateTime;
import javax.annotation.Nonnull;
import com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkage;
import com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkageByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkageCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkageDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkageFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkageUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProduct;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProductByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProductCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProductDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProductFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProductUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProvider;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProviderByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProviderCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProviderDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProviderFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProviderUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProxy;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPoint;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPointByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPointCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPointDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPointFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPointUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIResource;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIResourceByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIResourceCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIResourceDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIResourceFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APIResourceUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPoint;
import com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPointByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPointCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPointDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPointFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPointUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.Application;
import com.mycompany.vdm.namespaces.portalapplicationscf.ApplicationByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ApplicationCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ApplicationDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ApplicationFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ApplicationUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.Bill;
import com.mycompany.vdm.namespaces.portalapplicationscf.BillByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.BillCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.BillDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.BillFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.BillUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.CacheResource;
import com.mycompany.vdm.namespaces.portalapplicationscf.CacheResourceByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.CacheResourceCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.CacheResourceDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.CacheResourceFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.CacheResourceUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.Certificate;
import com.mycompany.vdm.namespaces.portalapplicationscf.CertificateByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.CertificateCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.CertificateDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.CertificateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStore;
import com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStoreByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStoreCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStoreDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStoreFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStoreUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.CertificateUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRule;
import com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRuleByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRuleCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRuleDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRuleFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRuleUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapperByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapperCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapperDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapperFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapperUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRule;
import com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRuleByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRuleCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRuleDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRuleFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRuleUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMapping;
import com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMappingByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMappingCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMappingDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMappingFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMappingUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.Developer;
import com.mycompany.vdm.namespaces.portalapplicationscf.DeveloperByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DeveloperCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DeveloperDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DeveloperFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DeveloperUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.Documentation;
import com.mycompany.vdm.namespaces.portalapplicationscf.DocumentationByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DocumentationCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DocumentationDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DocumentationFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.DocumentationUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.EndPointProperty;
import com.mycompany.vdm.namespaces.portalapplicationscf.EndPointPropertyByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.EndPointPropertyCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.EndPointPropertyDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.EndPointPropertyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.EndPointPropertyUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.FaultRule;
import com.mycompany.vdm.namespaces.portalapplicationscf.FaultRuleByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.FaultRuleCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.FaultRuleDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.FaultRuleFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.FaultRuleUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.FileResource;
import com.mycompany.vdm.namespaces.portalapplicationscf.FileResourceByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.FileResourceCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.FileResourceDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.FileResourceFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.FileResourceUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.FlowRule;
import com.mycompany.vdm.namespaces.portalapplicationscf.FlowRuleByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.FlowRuleCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.FlowRuleDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.FlowRuleFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.FlowRuleUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntry;
import com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValue;
import com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValueByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValueCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValueDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValueFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValueUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.Policy;
import com.mycompany.vdm.namespaces.portalapplicationscf.PolicyByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.PolicyCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.PolicyDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.PolicyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainer;
import com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainerByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainerCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainerDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainerFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainerUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.PolicyUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.RatePlan;
import com.mycompany.vdm.namespaces.portalapplicationscf.RatePlanByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.RatePlanCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.RatePlanDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.RatePlanFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.RatePlanUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.Resource;
import com.mycompany.vdm.namespaces.portalapplicationscf.ResourceByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ResourceCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ResourceDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ResourceFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.ResourceUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.RouteRule;
import com.mycompany.vdm.namespaces.portalapplicationscf.RouteRuleByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.RouteRuleCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.RouteRuleDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.RouteRuleFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.RouteRuleUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.Step;
import com.mycompany.vdm.namespaces.portalapplicationscf.StepByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.StepCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.StepDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.StepFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.StepUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.Stream;
import com.mycompany.vdm.namespaces.portalapplicationscf.StreamByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.StreamCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.StreamDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.StreamFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.StreamUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResource;
import com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResourceByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResourceCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResourceDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResourceFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResourceUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicy;
import com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicyByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicyCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicyDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicyUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHost;
import com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHostByKeyFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHostCreateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHostDeleteFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHostFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHostUpdateFluentHelper;
import com.mycompany.vdm.namespaces.portalapplicationscf.batch.APIPortalApplicationsCFServiceBatch;
import com.sap.cloud.sdk.datamodel.odata.helper.batch.BatchService;


/**
 * <h3>Details:</h3><table summary='Details'><tr><td align='right'>OData Service:</td><td>APIPortal_Applications_CF</td></tr></table>
 * 
 */
public interface APIPortalApplicationsCFService
    extends BatchService<APIPortalApplicationsCFServiceBatch>
{

    /**
     * If no other path was provided via the {@link #withServicePath(String)} method, this is the default service path used to access the endpoint.
     * 
     */
    String DEFAULT_SERVICE_PATH = "odata/v4/apiportal";

    /**
     * Overrides the default service path and returns a new service instance with the specified service path. Also adjusts the respective entity URLs.
     * 
     * @param servicePath
     *     Service path that will override the default.
     * @return
     *     A new service instance with the specified service path.
     */
    @Nonnull
    APIPortalApplicationsCFService withServicePath(
        @Nonnull
        final String servicePath);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntry KeyMapEntry} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntry KeyMapEntry} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    KeyMapEntryFluentHelper getAllKeyMapEntries();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntry KeyMapEntry} entity using key fields.
     * 
     * @param name
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntry KeyMapEntry} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    KeyMapEntryByKeyFluentHelper getKeyMapEntriesByKey(final String name);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntry KeyMapEntry} entity and save it to the S/4HANA system.
     * 
     * @param keyMapEntry
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntry KeyMapEntry} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntry KeyMapEntry} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    KeyMapEntryCreateFluentHelper createKeyMapEntries(
        @Nonnull
        final KeyMapEntry keyMapEntry);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntry KeyMapEntry} entity and save it to the S/4HANA system.
     * 
     * @param keyMapEntry
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntry KeyMapEntry} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntry KeyMapEntry} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    KeyMapEntryUpdateFluentHelper updateKeyMapEntries(
        @Nonnull
        final KeyMapEntry keyMapEntry);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntry KeyMapEntry} entity in the S/4HANA system.
     * 
     * @param keyMapEntry
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntry KeyMapEntry} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntry KeyMapEntry} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    KeyMapEntryDeleteFluentHelper deleteKeyMapEntries(
        @Nonnull
        final KeyMapEntry keyMapEntry);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHost VirtualHost} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHost VirtualHost} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHostFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    VirtualHostFluentHelper getAllVirtualHosts();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHost VirtualHost} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHost VirtualHost} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHostByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    VirtualHostByKeyFluentHelper getVirtualHostsByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHost VirtualHost} entity and save it to the S/4HANA system.
     * 
     * @param virtualHost
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHost VirtualHost} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHost VirtualHost} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHostCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    VirtualHostCreateFluentHelper createVirtualHosts(
        @Nonnull
        final VirtualHost virtualHost);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHost VirtualHost} entity and save it to the S/4HANA system.
     * 
     * @param virtualHost
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHost VirtualHost} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHost VirtualHost} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHostUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    VirtualHostUpdateFluentHelper updateVirtualHosts(
        @Nonnull
        final VirtualHost virtualHost);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHost VirtualHost} entity in the S/4HANA system.
     * 
     * @param virtualHost
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHost VirtualHost} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHost VirtualHost} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.VirtualHostDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    VirtualHostDeleteFluentHelper deleteVirtualHosts(
        @Nonnull
        final VirtualHost virtualHost);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRule FlowRule} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRule FlowRule} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRuleFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    FlowRuleFluentHelper getAllFlowRules();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRule FlowRule} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRule FlowRule} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRuleByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    FlowRuleByKeyFluentHelper getFlowRulesByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRule FlowRule} entity and save it to the S/4HANA system.
     * 
     * @param flowRule
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRule FlowRule} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRule FlowRule} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRuleCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    FlowRuleCreateFluentHelper createFlowRules(
        @Nonnull
        final FlowRule flowRule);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRule FlowRule} entity and save it to the S/4HANA system.
     * 
     * @param flowRule
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRule FlowRule} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRule FlowRule} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRuleUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    FlowRuleUpdateFluentHelper updateFlowRules(
        @Nonnull
        final FlowRule flowRule);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRule FlowRule} entity in the S/4HANA system.
     * 
     * @param flowRule
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRule FlowRule} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRule FlowRule} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.FlowRuleDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    FlowRuleDeleteFluentHelper deleteFlowRules(
        @Nonnull
        final FlowRule flowRule);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResource TemplateFileResource} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResource TemplateFileResource} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResourceFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    TemplateFileResourceFluentHelper getAllTemplateFileResources();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResource TemplateFileResource} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResource TemplateFileResource} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResourceByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    TemplateFileResourceByKeyFluentHelper getTemplateFileResourcesByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResource TemplateFileResource} entity and save it to the S/4HANA system.
     * 
     * @param templateFileResource
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResource TemplateFileResource} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResource TemplateFileResource} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResourceCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    TemplateFileResourceCreateFluentHelper createTemplateFileResources(
        @Nonnull
        final TemplateFileResource templateFileResource);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResource TemplateFileResource} entity and save it to the S/4HANA system.
     * 
     * @param templateFileResource
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResource TemplateFileResource} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResource TemplateFileResource} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResourceUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    TemplateFileResourceUpdateFluentHelper updateTemplateFileResources(
        @Nonnull
        final TemplateFileResource templateFileResource);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResource TemplateFileResource} entity in the S/4HANA system.
     * 
     * @param templateFileResource
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResource TemplateFileResource} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResource TemplateFileResource} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplateFileResourceDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    TemplateFileResourceDeleteFluentHelper deleteTemplateFileResources(
        @Nonnull
        final TemplateFileResource templateFileResource);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkage ACLProductLinkage} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkage ACLProductLinkage} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkageFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ACLProductLinkageFluentHelper getAllACLProductLinkages();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkage ACLProductLinkage} entity using key fields.
     * 
     * @param ruleId
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkage ACLProductLinkage} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkageByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ACLProductLinkageByKeyFluentHelper getACLProductLinkagesByKey(final String ruleId);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkage ACLProductLinkage} entity and save it to the S/4HANA system.
     * 
     * @param aCLProductLinkage
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkage ACLProductLinkage} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkage ACLProductLinkage} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkageCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ACLProductLinkageCreateFluentHelper createACLProductLinkages(
        @Nonnull
        final ACLProductLinkage aCLProductLinkage);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkage ACLProductLinkage} entity and save it to the S/4HANA system.
     * 
     * @param aCLProductLinkage
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkage ACLProductLinkage} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkage ACLProductLinkage} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkageUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ACLProductLinkageUpdateFluentHelper updateACLProductLinkages(
        @Nonnull
        final ACLProductLinkage aCLProductLinkage);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkage ACLProductLinkage} entity in the S/4HANA system.
     * 
     * @param aCLProductLinkage
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkage ACLProductLinkage} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkage ACLProductLinkage} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ACLProductLinkageDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ACLProductLinkageDeleteFluentHelper deleteACLProductLinkages(
        @Nonnull
        final ACLProductLinkage aCLProductLinkage);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPoint APIProxyEndPoint} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPoint APIProxyEndPoint} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPointFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProxyEndPointFluentHelper getAllAPIProxyEndPoints();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPoint APIProxyEndPoint} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPoint APIProxyEndPoint} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPointByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProxyEndPointByKeyFluentHelper getAPIProxyEndPointsByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPoint APIProxyEndPoint} entity and save it to the S/4HANA system.
     * 
     * @param aPIProxyEndPoint
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPoint APIProxyEndPoint} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPoint APIProxyEndPoint} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPointCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProxyEndPointCreateFluentHelper createAPIProxyEndPoints(
        @Nonnull
        final APIProxyEndPoint aPIProxyEndPoint);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPoint APIProxyEndPoint} entity and save it to the S/4HANA system.
     * 
     * @param aPIProxyEndPoint
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPoint APIProxyEndPoint} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPoint APIProxyEndPoint} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPointUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProxyEndPointUpdateFluentHelper updateAPIProxyEndPoints(
        @Nonnull
        final APIProxyEndPoint aPIProxyEndPoint);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPoint APIProxyEndPoint} entity in the S/4HANA system.
     * 
     * @param aPIProxyEndPoint
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPoint APIProxyEndPoint} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPoint APIProxyEndPoint} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyEndPointDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProxyEndPointDeleteFluentHelper deleteAPIProxyEndPoints(
        @Nonnull
        final APIProxyEndPoint aPIProxyEndPoint);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStore CertificateStore} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStore CertificateStore} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStoreFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    CertificateStoreFluentHelper getAllCertificateStores();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStore CertificateStore} entity using key fields.
     * 
     * @param name
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStore CertificateStore} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStoreByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    CertificateStoreByKeyFluentHelper getCertificateStoresByKey(final String name);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStore CertificateStore} entity and save it to the S/4HANA system.
     * 
     * @param certificateStore
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStore CertificateStore} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStore CertificateStore} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStoreCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    CertificateStoreCreateFluentHelper createCertificateStores(
        @Nonnull
        final CertificateStore certificateStore);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStore CertificateStore} entity and save it to the S/4HANA system.
     * 
     * @param certificateStore
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStore CertificateStore} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStore CertificateStore} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStoreUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    CertificateStoreUpdateFluentHelper updateCertificateStores(
        @Nonnull
        final CertificateStore certificateStore);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStore CertificateStore} entity in the S/4HANA system.
     * 
     * @param certificateStore
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStore CertificateStore} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStore CertificateStore} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateStoreDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    CertificateStoreDeleteFluentHelper deleteCertificateStores(
        @Nonnull
        final CertificateStore certificateStore);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicy TemplatePolicy} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicy TemplatePolicy} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    TemplatePolicyFluentHelper getAllTemplatePolicys();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicy TemplatePolicy} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicy TemplatePolicy} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicyByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    TemplatePolicyByKeyFluentHelper getTemplatePolicysByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicy TemplatePolicy} entity and save it to the S/4HANA system.
     * 
     * @param templatePolicy
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicy TemplatePolicy} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicy TemplatePolicy} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicyCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    TemplatePolicyCreateFluentHelper createTemplatePolicys(
        @Nonnull
        final TemplatePolicy templatePolicy);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicy TemplatePolicy} entity and save it to the S/4HANA system.
     * 
     * @param templatePolicy
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicy TemplatePolicy} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicy TemplatePolicy} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicyUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    TemplatePolicyUpdateFluentHelper updateTemplatePolicys(
        @Nonnull
        final TemplatePolicy templatePolicy);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicy TemplatePolicy} entity in the S/4HANA system.
     * 
     * @param templatePolicy
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicy TemplatePolicy} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicy TemplatePolicy} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.TemplatePolicyDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    TemplatePolicyDeleteFluentHelper deleteTemplatePolicys(
        @Nonnull
        final TemplatePolicy templatePolicy);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxy APIProxy} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxy APIProxy} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProxyFluentHelper getAllAPIProxies();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxy APIProxy} entity using key fields.
     * 
     * @param name
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxy APIProxy} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProxyByKeyFluentHelper getAPIProxiesByKey(final String name);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxy APIProxy} entity and save it to the S/4HANA system.
     * 
     * @param aPIProxy
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxy APIProxy} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxy APIProxy} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProxyCreateFluentHelper createAPIProxies(
        @Nonnull
        final APIProxy aPIProxy);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxy APIProxy} entity and save it to the S/4HANA system.
     * 
     * @param aPIProxy
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxy APIProxy} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxy APIProxy} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProxyUpdateFluentHelper updateAPIProxies(
        @Nonnull
        final APIProxy aPIProxy);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxy APIProxy} entity in the S/4HANA system.
     * 
     * @param aPIProxy
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxy APIProxy} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxy APIProxy} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProxyDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProxyDeleteFluentHelper deleteAPIProxies(
        @Nonnull
        final APIProxy aPIProxy);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointProperty EndPointProperty} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointProperty EndPointProperty} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointPropertyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    EndPointPropertyFluentHelper getAllEndPointProperties();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointProperty EndPointProperty} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointProperty EndPointProperty} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointPropertyByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    EndPointPropertyByKeyFluentHelper getEndPointPropertiesByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointProperty EndPointProperty} entity and save it to the S/4HANA system.
     * 
     * @param endPointProperty
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointProperty EndPointProperty} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointProperty EndPointProperty} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointPropertyCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    EndPointPropertyCreateFluentHelper createEndPointProperties(
        @Nonnull
        final EndPointProperty endPointProperty);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointProperty EndPointProperty} entity and save it to the S/4HANA system.
     * 
     * @param endPointProperty
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointProperty EndPointProperty} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointProperty EndPointProperty} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointPropertyUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    EndPointPropertyUpdateFluentHelper updateEndPointProperties(
        @Nonnull
        final EndPointProperty endPointProperty);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointProperty EndPointProperty} entity in the S/4HANA system.
     * 
     * @param endPointProperty
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointProperty EndPointProperty} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointProperty EndPointProperty} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.EndPointPropertyDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    EndPointPropertyDeleteFluentHelper deleteEndPointProperties(
        @Nonnull
        final EndPointProperty endPointProperty);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Application Application} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Application Application} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ApplicationFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ApplicationFluentHelper getAllApplications();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Application Application} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Application Application} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ApplicationByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ApplicationByKeyFluentHelper getApplicationsByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Application Application} entity and save it to the S/4HANA system.
     * 
     * @param application
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Application Application} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Application Application} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ApplicationCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ApplicationCreateFluentHelper createApplications(
        @Nonnull
        final Application application);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Application Application} entity and save it to the S/4HANA system.
     * 
     * @param application
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Application Application} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Application Application} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ApplicationUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ApplicationUpdateFluentHelper updateApplications(
        @Nonnull
        final Application application);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Application Application} entity in the S/4HANA system.
     * 
     * @param application
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Application Application} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Application Application} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ApplicationDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ApplicationDeleteFluentHelper deleteApplications(
        @Nonnull
        final Application application);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Step Step} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Step Step} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.StepFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    StepFluentHelper getAllSteps();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Step Step} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Step Step} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.StepByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    StepByKeyFluentHelper getStepsByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Step Step} entity and save it to the S/4HANA system.
     * 
     * @param step
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Step Step} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Step Step} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.StepCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    StepCreateFluentHelper createSteps(
        @Nonnull
        final Step step);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Step Step} entity and save it to the S/4HANA system.
     * 
     * @param step
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Step Step} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Step Step} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.StepUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    StepUpdateFluentHelper updateSteps(
        @Nonnull
        final Step step);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Step Step} entity in the S/4HANA system.
     * 
     * @param step
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Step Step} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Step Step} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.StepDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    StepDeleteFluentHelper deleteSteps(
        @Nonnull
        final Step step);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProvider APIProvider} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProvider APIProvider} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProviderFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProviderFluentHelper getAllAPIProviders();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProvider APIProvider} entity using key fields.
     * 
     * @param name
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProvider APIProvider} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProviderByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProviderByKeyFluentHelper getAPIProvidersByKey(final String name);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProvider APIProvider} entity and save it to the S/4HANA system.
     * 
     * @param aPIProvider
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProvider APIProvider} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProvider APIProvider} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProviderCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProviderCreateFluentHelper createAPIProviders(
        @Nonnull
        final APIProvider aPIProvider);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProvider APIProvider} entity and save it to the S/4HANA system.
     * 
     * @param aPIProvider
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProvider APIProvider} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProvider APIProvider} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProviderUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProviderUpdateFluentHelper updateAPIProviders(
        @Nonnull
        final APIProvider aPIProvider);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProvider APIProvider} entity in the S/4HANA system.
     * 
     * @param aPIProvider
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProvider APIProvider} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProvider APIProvider} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProviderDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProviderDeleteFluentHelper deleteAPIProviders(
        @Nonnull
        final APIProvider aPIProvider);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMapping DestinationAndUrlMapping} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMapping DestinationAndUrlMapping} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMappingFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DestinationAndUrlMappingFluentHelper getAllDestinationAndUrlMappings();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMapping DestinationAndUrlMapping} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMapping DestinationAndUrlMapping} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMappingByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DestinationAndUrlMappingByKeyFluentHelper getDestinationAndUrlMappingsByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMapping DestinationAndUrlMapping} entity and save it to the S/4HANA system.
     * 
     * @param destinationAndUrlMapping
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMapping DestinationAndUrlMapping} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMapping DestinationAndUrlMapping} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMappingCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DestinationAndUrlMappingCreateFluentHelper createDestinationAndUrlMappings(
        @Nonnull
        final DestinationAndUrlMapping destinationAndUrlMapping);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMapping DestinationAndUrlMapping} entity and save it to the S/4HANA system.
     * 
     * @param destinationAndUrlMapping
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMapping DestinationAndUrlMapping} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMapping DestinationAndUrlMapping} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMappingUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DestinationAndUrlMappingUpdateFluentHelper updateDestinationAndUrlMappings(
        @Nonnull
        final DestinationAndUrlMapping destinationAndUrlMapping);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMapping DestinationAndUrlMapping} entity in the S/4HANA system.
     * 
     * @param destinationAndUrlMapping
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMapping DestinationAndUrlMapping} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMapping DestinationAndUrlMapping} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DestinationAndUrlMappingDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DestinationAndUrlMappingDeleteFluentHelper deleteDestinationAndUrlMappings(
        @Nonnull
        final DestinationAndUrlMapping destinationAndUrlMapping);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Resource Resource} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Resource Resource} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ResourceFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ResourceFluentHelper getAllResources();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Resource Resource} entity using key fields.
     * 
     * @param type_2
     *     
     * @param locale
     *     
     * @param object_id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Resource Resource} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ResourceByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ResourceByKeyFluentHelper getResourcesByKey(final String locale, final String object_id, final String type_2);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Resource Resource} entity and save it to the S/4HANA system.
     * 
     * @param resource
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Resource Resource} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Resource Resource} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ResourceCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ResourceCreateFluentHelper createResources(
        @Nonnull
        final Resource resource);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Resource Resource} entity and save it to the S/4HANA system.
     * 
     * @param resource
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Resource Resource} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Resource Resource} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ResourceUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ResourceUpdateFluentHelper updateResources(
        @Nonnull
        final Resource resource);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Resource Resource} entity in the S/4HANA system.
     * 
     * @param resource
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Resource Resource} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Resource Resource} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ResourceDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ResourceDeleteFluentHelper deleteResources(
        @Nonnull
        final Resource resource);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapper ContentPackageMapper} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapper ContentPackageMapper} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapperFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ContentPackageMapperFluentHelper getAllContentPackageMappers();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapper ContentPackageMapper} entity using key fields.
     * 
     * @param targetId
     *     
     * @param targetType
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapper ContentPackageMapper} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapperByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ContentPackageMapperByKeyFluentHelper getContentPackageMappersByKey(final String targetId, final String targetType);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapper ContentPackageMapper} entity and save it to the S/4HANA system.
     * 
     * @param contentPackageMapper
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapper ContentPackageMapper} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapper ContentPackageMapper} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapperCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ContentPackageMapperCreateFluentHelper createContentPackageMappers(
        @Nonnull
        final ContentPackageMapper contentPackageMapper);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapper ContentPackageMapper} entity and save it to the S/4HANA system.
     * 
     * @param contentPackageMapper
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapper ContentPackageMapper} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapper ContentPackageMapper} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapperUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ContentPackageMapperUpdateFluentHelper updateContentPackageMappers(
        @Nonnull
        final ContentPackageMapper contentPackageMapper);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapper ContentPackageMapper} entity in the S/4HANA system.
     * 
     * @param contentPackageMapper
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapper ContentPackageMapper} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapper ContentPackageMapper} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ContentPackageMapperDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ContentPackageMapperDeleteFluentHelper deleteContentPackageMappers(
        @Nonnull
        final ContentPackageMapper contentPackageMapper);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRule ConditionalFlowRule} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRule ConditionalFlowRule} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRuleFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ConditionalFlowRuleFluentHelper getAllConditionalFlowRules();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRule ConditionalFlowRule} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRule ConditionalFlowRule} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRuleByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ConditionalFlowRuleByKeyFluentHelper getConditionalFlowRulesByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRule ConditionalFlowRule} entity and save it to the S/4HANA system.
     * 
     * @param conditionalFlowRule
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRule ConditionalFlowRule} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRule ConditionalFlowRule} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRuleCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ConditionalFlowRuleCreateFluentHelper createConditionalFlowRules(
        @Nonnull
        final ConditionalFlowRule conditionalFlowRule);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRule ConditionalFlowRule} entity and save it to the S/4HANA system.
     * 
     * @param conditionalFlowRule
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRule ConditionalFlowRule} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRule ConditionalFlowRule} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRuleUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ConditionalFlowRuleUpdateFluentHelper updateConditionalFlowRules(
        @Nonnull
        final ConditionalFlowRule conditionalFlowRule);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRule ConditionalFlowRule} entity in the S/4HANA system.
     * 
     * @param conditionalFlowRule
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRule ConditionalFlowRule} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRule ConditionalFlowRule} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.ConditionalFlowRuleDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    ConditionalFlowRuleDeleteFluentHelper deleteConditionalFlowRules(
        @Nonnull
        final ConditionalFlowRule conditionalFlowRule);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRule DefaultFaultRule} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRule DefaultFaultRule} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRuleFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DefaultFaultRuleFluentHelper getAllDefaultFaultRules();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRule DefaultFaultRule} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRule DefaultFaultRule} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRuleByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DefaultFaultRuleByKeyFluentHelper getDefaultFaultRulesByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRule DefaultFaultRule} entity and save it to the S/4HANA system.
     * 
     * @param defaultFaultRule
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRule DefaultFaultRule} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRule DefaultFaultRule} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRuleCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DefaultFaultRuleCreateFluentHelper createDefaultFaultRules(
        @Nonnull
        final DefaultFaultRule defaultFaultRule);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRule DefaultFaultRule} entity and save it to the S/4HANA system.
     * 
     * @param defaultFaultRule
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRule DefaultFaultRule} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRule DefaultFaultRule} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRuleUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DefaultFaultRuleUpdateFluentHelper updateDefaultFaultRules(
        @Nonnull
        final DefaultFaultRule defaultFaultRule);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRule DefaultFaultRule} entity in the S/4HANA system.
     * 
     * @param defaultFaultRule
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRule DefaultFaultRule} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRule DefaultFaultRule} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DefaultFaultRuleDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DefaultFaultRuleDeleteFluentHelper deleteDefaultFaultRules(
        @Nonnull
        final DefaultFaultRule defaultFaultRule);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResource APIResource} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResource APIResource} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResourceFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIResourceFluentHelper getAllAPIResources();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResource APIResource} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResource APIResource} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResourceByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIResourceByKeyFluentHelper getAPIResourcesByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResource APIResource} entity and save it to the S/4HANA system.
     * 
     * @param aPIResource
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResource APIResource} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResource APIResource} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResourceCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIResourceCreateFluentHelper createAPIResources(
        @Nonnull
        final APIResource aPIResource);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResource APIResource} entity and save it to the S/4HANA system.
     * 
     * @param aPIResource
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResource APIResource} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResource APIResource} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResourceUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIResourceUpdateFluentHelper updateAPIResources(
        @Nonnull
        final APIResource aPIResource);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResource APIResource} entity in the S/4HANA system.
     * 
     * @param aPIResource
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResource APIResource} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResource APIResource} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIResourceDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIResourceDeleteFluentHelper deleteAPIResources(
        @Nonnull
        final APIResource aPIResource);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPoint APITargetEndPoint} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPoint APITargetEndPoint} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPointFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APITargetEndPointFluentHelper getAllAPITargetEndPoints();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPoint APITargetEndPoint} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPoint APITargetEndPoint} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPointByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APITargetEndPointByKeyFluentHelper getAPITargetEndPointsByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPoint APITargetEndPoint} entity and save it to the S/4HANA system.
     * 
     * @param aPITargetEndPoint
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPoint APITargetEndPoint} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPoint APITargetEndPoint} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPointCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APITargetEndPointCreateFluentHelper createAPITargetEndPoints(
        @Nonnull
        final APITargetEndPoint aPITargetEndPoint);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPoint APITargetEndPoint} entity and save it to the S/4HANA system.
     * 
     * @param aPITargetEndPoint
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPoint APITargetEndPoint} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPoint APITargetEndPoint} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPointUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APITargetEndPointUpdateFluentHelper updateAPITargetEndPoints(
        @Nonnull
        final APITargetEndPoint aPITargetEndPoint);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPoint APITargetEndPoint} entity in the S/4HANA system.
     * 
     * @param aPITargetEndPoint
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPoint APITargetEndPoint} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPoint APITargetEndPoint} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APITargetEndPointDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APITargetEndPointDeleteFluentHelper deleteAPITargetEndPoints(
        @Nonnull
        final APITargetEndPoint aPITargetEndPoint);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRule FaultRule} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRule FaultRule} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRuleFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    FaultRuleFluentHelper getAllFaultRules();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRule FaultRule} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRule FaultRule} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRuleByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    FaultRuleByKeyFluentHelper getFaultRulesByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRule FaultRule} entity and save it to the S/4HANA system.
     * 
     * @param faultRule
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRule FaultRule} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRule FaultRule} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRuleCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    FaultRuleCreateFluentHelper createFaultRules(
        @Nonnull
        final FaultRule faultRule);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRule FaultRule} entity and save it to the S/4HANA system.
     * 
     * @param faultRule
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRule FaultRule} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRule FaultRule} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRuleUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    FaultRuleUpdateFluentHelper updateFaultRules(
        @Nonnull
        final FaultRule faultRule);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRule FaultRule} entity in the S/4HANA system.
     * 
     * @param faultRule
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRule FaultRule} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRule FaultRule} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.FaultRuleDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    FaultRuleDeleteFluentHelper deleteFaultRules(
        @Nonnull
        final FaultRule faultRule);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProduct APIProduct} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProduct APIProduct} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProductFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProductFluentHelper getAllAPIProducts();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProduct APIProduct} entity using key fields.
     * 
     * @param name
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProduct APIProduct} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProductByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProductByKeyFluentHelper getAPIProductsByKey(final String name);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProduct APIProduct} entity and save it to the S/4HANA system.
     * 
     * @param aPIProduct
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProduct APIProduct} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProduct APIProduct} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProductCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProductCreateFluentHelper createAPIProducts(
        @Nonnull
        final APIProduct aPIProduct);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProduct APIProduct} entity and save it to the S/4HANA system.
     * 
     * @param aPIProduct
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProduct APIProduct} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProduct APIProduct} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProductUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProductUpdateFluentHelper updateAPIProducts(
        @Nonnull
        final APIProduct aPIProduct);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProduct APIProduct} entity in the S/4HANA system.
     * 
     * @param aPIProduct
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProduct APIProduct} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProduct APIProduct} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.APIProductDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    APIProductDeleteFluentHelper deleteAPIProducts(
        @Nonnull
        final APIProduct aPIProduct);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Documentation Documentation} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Documentation Documentation} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DocumentationFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DocumentationFluentHelper getAllDocumentations();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Documentation Documentation} entity using key fields.
     * 
     * @param id
     *     
     * @param locale
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Documentation Documentation} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DocumentationByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DocumentationByKeyFluentHelper getDocumentationsByKey(final String id, final String locale);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Documentation Documentation} entity and save it to the S/4HANA system.
     * 
     * @param documentation
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Documentation Documentation} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Documentation Documentation} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DocumentationCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DocumentationCreateFluentHelper createDocumentations(
        @Nonnull
        final Documentation documentation);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Documentation Documentation} entity and save it to the S/4HANA system.
     * 
     * @param documentation
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Documentation Documentation} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Documentation Documentation} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DocumentationUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DocumentationUpdateFluentHelper updateDocumentations(
        @Nonnull
        final Documentation documentation);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Documentation Documentation} entity in the S/4HANA system.
     * 
     * @param documentation
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Documentation Documentation} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Documentation Documentation} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DocumentationDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DocumentationDeleteFluentHelper deleteDocumentations(
        @Nonnull
        final Documentation documentation);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Certificate Certificate} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Certificate Certificate} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    CertificateFluentHelper getAllCertificates();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Certificate Certificate} entity using key fields.
     * 
     * @param name
     *     
     * @param storeName
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Certificate Certificate} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    CertificateByKeyFluentHelper getCertificatesByKey(final String name, final String storeName);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Certificate Certificate} entity and save it to the S/4HANA system.
     * 
     * @param certificate
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Certificate Certificate} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Certificate Certificate} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    CertificateCreateFluentHelper createCertificates(
        @Nonnull
        final Certificate certificate);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Certificate Certificate} entity and save it to the S/4HANA system.
     * 
     * @param certificate
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Certificate Certificate} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Certificate Certificate} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    CertificateUpdateFluentHelper updateCertificates(
        @Nonnull
        final Certificate certificate);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Certificate Certificate} entity in the S/4HANA system.
     * 
     * @param certificate
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Certificate Certificate} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Certificate Certificate} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.CertificateDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    CertificateDeleteFluentHelper deleteCertificates(
        @Nonnull
        final Certificate certificate);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlan RatePlan} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlan RatePlan} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlanFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    RatePlanFluentHelper getAllRatePlans();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlan RatePlan} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlan RatePlan} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlanByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    RatePlanByKeyFluentHelper getRatePlansByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlan RatePlan} entity and save it to the S/4HANA system.
     * 
     * @param ratePlan
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlan RatePlan} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlan RatePlan} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlanCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    RatePlanCreateFluentHelper createRatePlans(
        @Nonnull
        final RatePlan ratePlan);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlan RatePlan} entity and save it to the S/4HANA system.
     * 
     * @param ratePlan
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlan RatePlan} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlan RatePlan} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlanUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    RatePlanUpdateFluentHelper updateRatePlans(
        @Nonnull
        final RatePlan ratePlan);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlan RatePlan} entity in the S/4HANA system.
     * 
     * @param ratePlan
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlan RatePlan} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlan RatePlan} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.RatePlanDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    RatePlanDeleteFluentHelper deleteRatePlans(
        @Nonnull
        final RatePlan ratePlan);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainer PolicyTemplateContainer} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainer PolicyTemplateContainer} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainerFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    PolicyTemplateContainerFluentHelper getAllPolicyTemplateContainers();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainer PolicyTemplateContainer} entity using key fields.
     * 
     * @param name
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainer PolicyTemplateContainer} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainerByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    PolicyTemplateContainerByKeyFluentHelper getPolicyTemplateContainersByKey(final String name);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainer PolicyTemplateContainer} entity and save it to the S/4HANA system.
     * 
     * @param policyTemplateContainer
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainer PolicyTemplateContainer} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainer PolicyTemplateContainer} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainerCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    PolicyTemplateContainerCreateFluentHelper createPolicyTemplateContainers(
        @Nonnull
        final PolicyTemplateContainer policyTemplateContainer);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainer PolicyTemplateContainer} entity and save it to the S/4HANA system.
     * 
     * @param policyTemplateContainer
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainer PolicyTemplateContainer} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainer PolicyTemplateContainer} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainerUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    PolicyTemplateContainerUpdateFluentHelper updatePolicyTemplateContainers(
        @Nonnull
        final PolicyTemplateContainer policyTemplateContainer);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainer PolicyTemplateContainer} entity in the S/4HANA system.
     * 
     * @param policyTemplateContainer
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainer PolicyTemplateContainer} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainer PolicyTemplateContainer} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyTemplateContainerDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    PolicyTemplateContainerDeleteFluentHelper deletePolicyTemplateContainers(
        @Nonnull
        final PolicyTemplateContainer policyTemplateContainer);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Bill Bill} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Bill Bill} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.BillFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    BillFluentHelper getAllBills();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Bill Bill} entity using key fields.
     * 
     * @param fromDate
     *     
     * @param entityType
     *     
     * @param toDate
     *     
     * @param entityId
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Bill Bill} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.BillByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    BillByKeyFluentHelper getBillsByKey(final String entityId, final String entityType, final LocalDateTime fromDate, final LocalDateTime toDate);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Bill Bill} entity and save it to the S/4HANA system.
     * 
     * @param bill
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Bill Bill} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Bill Bill} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.BillCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    BillCreateFluentHelper createBills(
        @Nonnull
        final Bill bill);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Bill Bill} entity and save it to the S/4HANA system.
     * 
     * @param bill
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Bill Bill} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Bill Bill} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.BillUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    BillUpdateFluentHelper updateBills(
        @Nonnull
        final Bill bill);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Bill Bill} entity in the S/4HANA system.
     * 
     * @param bill
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Bill Bill} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Bill Bill} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.BillDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    BillDeleteFluentHelper deleteBills(
        @Nonnull
        final Bill bill);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRule RouteRule} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRule RouteRule} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRuleFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    RouteRuleFluentHelper getAllRouteRules();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRule RouteRule} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRule RouteRule} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRuleByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    RouteRuleByKeyFluentHelper getRouteRulesByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRule RouteRule} entity and save it to the S/4HANA system.
     * 
     * @param routeRule
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRule RouteRule} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRule RouteRule} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRuleCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    RouteRuleCreateFluentHelper createRouteRules(
        @Nonnull
        final RouteRule routeRule);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRule RouteRule} entity and save it to the S/4HANA system.
     * 
     * @param routeRule
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRule RouteRule} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRule RouteRule} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRuleUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    RouteRuleUpdateFluentHelper updateRouteRules(
        @Nonnull
        final RouteRule routeRule);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRule RouteRule} entity in the S/4HANA system.
     * 
     * @param routeRule
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRule RouteRule} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRule RouteRule} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.RouteRuleDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    RouteRuleDeleteFluentHelper deleteRouteRules(
        @Nonnull
        final RouteRule routeRule);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValue KeyMapEntryValue} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValue KeyMapEntryValue} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValueFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    KeyMapEntryValueFluentHelper getAllKeyMapEntryValues();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValue KeyMapEntryValue} entity using key fields.
     * 
     * @param map_name
     *     
     * @param name
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValue KeyMapEntryValue} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValueByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    KeyMapEntryValueByKeyFluentHelper getKeyMapEntryValuesByKey(final String map_name, final String name);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValue KeyMapEntryValue} entity and save it to the S/4HANA system.
     * 
     * @param keyMapEntryValue
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValue KeyMapEntryValue} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValue KeyMapEntryValue} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValueCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    KeyMapEntryValueCreateFluentHelper createKeyMapEntryValues(
        @Nonnull
        final KeyMapEntryValue keyMapEntryValue);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValue KeyMapEntryValue} entity and save it to the S/4HANA system.
     * 
     * @param keyMapEntryValue
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValue KeyMapEntryValue} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValue KeyMapEntryValue} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValueUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    KeyMapEntryValueUpdateFluentHelper updateKeyMapEntryValues(
        @Nonnull
        final KeyMapEntryValue keyMapEntryValue);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValue KeyMapEntryValue} entity in the S/4HANA system.
     * 
     * @param keyMapEntryValue
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValue KeyMapEntryValue} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValue KeyMapEntryValue} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.KeyMapEntryValueDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    KeyMapEntryValueDeleteFluentHelper deleteKeyMapEntryValues(
        @Nonnull
        final KeyMapEntryValue keyMapEntryValue);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResource FileResource} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResource FileResource} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResourceFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    FileResourceFluentHelper getAllFileResources();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResource FileResource} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResource FileResource} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResourceByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    FileResourceByKeyFluentHelper getFileResourcesByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResource FileResource} entity and save it to the S/4HANA system.
     * 
     * @param fileResource
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResource FileResource} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResource FileResource} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResourceCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    FileResourceCreateFluentHelper createFileResources(
        @Nonnull
        final FileResource fileResource);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResource FileResource} entity and save it to the S/4HANA system.
     * 
     * @param fileResource
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResource FileResource} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResource FileResource} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResourceUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    FileResourceUpdateFluentHelper updateFileResources(
        @Nonnull
        final FileResource fileResource);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResource FileResource} entity in the S/4HANA system.
     * 
     * @param fileResource
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResource FileResource} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResource FileResource} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.FileResourceDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    FileResourceDeleteFluentHelper deleteFileResources(
        @Nonnull
        final FileResource fileResource);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResource CacheResource} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResource CacheResource} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResourceFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    CacheResourceFluentHelper getAllCacheResources();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResource CacheResource} entity using key fields.
     * 
     * @param name
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResource CacheResource} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResourceByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    CacheResourceByKeyFluentHelper getCacheResourcesByKey(final String name);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResource CacheResource} entity and save it to the S/4HANA system.
     * 
     * @param cacheResource
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResource CacheResource} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResource CacheResource} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResourceCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    CacheResourceCreateFluentHelper createCacheResources(
        @Nonnull
        final CacheResource cacheResource);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResource CacheResource} entity and save it to the S/4HANA system.
     * 
     * @param cacheResource
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResource CacheResource} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResource CacheResource} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResourceUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    CacheResourceUpdateFluentHelper updateCacheResources(
        @Nonnull
        final CacheResource cacheResource);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResource CacheResource} entity in the S/4HANA system.
     * 
     * @param cacheResource
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResource CacheResource} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResource CacheResource} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.CacheResourceDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    CacheResourceDeleteFluentHelper deleteCacheResources(
        @Nonnull
        final CacheResource cacheResource);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Developer Developer} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Developer Developer} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DeveloperFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DeveloperFluentHelper getAllDevelopers();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Developer Developer} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Developer Developer} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DeveloperByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DeveloperByKeyFluentHelper getDevelopersByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Developer Developer} entity and save it to the S/4HANA system.
     * 
     * @param developer
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Developer Developer} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Developer Developer} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DeveloperCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DeveloperCreateFluentHelper createDevelopers(
        @Nonnull
        final Developer developer);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Developer Developer} entity and save it to the S/4HANA system.
     * 
     * @param developer
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Developer Developer} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Developer Developer} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DeveloperUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DeveloperUpdateFluentHelper updateDevelopers(
        @Nonnull
        final Developer developer);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Developer Developer} entity in the S/4HANA system.
     * 
     * @param developer
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Developer Developer} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Developer Developer} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.DeveloperDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    DeveloperDeleteFluentHelper deleteDevelopers(
        @Nonnull
        final Developer developer);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Stream Stream} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Stream Stream} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.StreamFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    StreamFluentHelper getAllStreams();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Stream Stream} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Stream Stream} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.StreamByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    StreamByKeyFluentHelper getStreamsByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Stream Stream} entity and save it to the S/4HANA system.
     * 
     * @param stream
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Stream Stream} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Stream Stream} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.StreamCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    StreamCreateFluentHelper createStreams(
        @Nonnull
        final Stream stream);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Stream Stream} entity and save it to the S/4HANA system.
     * 
     * @param stream
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Stream Stream} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Stream Stream} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.StreamUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    StreamUpdateFluentHelper updateStreams(
        @Nonnull
        final Stream stream);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Stream Stream} entity in the S/4HANA system.
     * 
     * @param stream
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Stream Stream} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Stream Stream} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.StreamDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    StreamDeleteFluentHelper deleteStreams(
        @Nonnull
        final Stream stream);

    /**
     * Fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Policy Policy} entities.
     * 
     * @return
     *     A fluent helper to fetch multiple {@link com.mycompany.vdm.namespaces.portalapplicationscf.Policy Policy} entities. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    PolicyFluentHelper getAllPolicies();

    /**
     * Fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Policy Policy} entity using key fields.
     * 
     * @param id
     *     
     * @return
     *     A fluent helper to fetch a single {@link com.mycompany.vdm.namespaces.portalapplicationscf.Policy Policy} entity using key fields. This fluent helper allows methods which modify the underlying query to be called before executing the query itself. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyByKeyFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    PolicyByKeyFluentHelper getPoliciesByKey(final String id);

    /**
     * Create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Policy Policy} entity and save it to the S/4HANA system.
     * 
     * @param policy
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Policy Policy} entity object that will be created in the S/4HANA system.
     * @return
     *     A fluent helper to create a new {@link com.mycompany.vdm.namespaces.portalapplicationscf.Policy Policy} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyCreateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    PolicyCreateFluentHelper createPolicies(
        @Nonnull
        final Policy policy);

    /**
     * Update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Policy Policy} entity and save it to the S/4HANA system.
     * 
     * @param policy
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Policy Policy} entity object that will be updated in the S/4HANA system.
     * @return
     *     A fluent helper to update an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Policy Policy} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyUpdateFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    PolicyUpdateFluentHelper updatePolicies(
        @Nonnull
        final Policy policy);

    /**
     * Deletes an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Policy Policy} entity in the S/4HANA system.
     * 
     * @param policy
     *     {@link com.mycompany.vdm.namespaces.portalapplicationscf.Policy Policy} entity object that will be deleted in the S/4HANA system.
     * @return
     *     A fluent helper to delete an existing {@link com.mycompany.vdm.namespaces.portalapplicationscf.Policy Policy} entity. To perform execution, call the {@link com.mycompany.vdm.namespaces.portalapplicationscf.PolicyDeleteFluentHelper#execute execute} method on the fluent helper object. 
     */
    @Nonnull
    PolicyDeleteFluentHelper deletePolicies(
        @Nonnull
        final Policy policy);

}
